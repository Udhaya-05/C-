//1.Write a C program to divide the integer array into two halves using function
//recursion. Call the user-defined “divide” function recursively, with the left half
//of the split array being passed as an argument for that function. Let the
//recursive function to get executed until the array size becomes one. Count the
//number of iterations to reach the base condition. Explain the working
//procedure of recursive function with stack structure
#include <stdio.h>
void divide(int arr[], int low, int high);
int main() {
   int arr[100], n, i;
   printf("Enter the size of the array: ");
   scanf("%d", &n);
   printf("Enter the elements of the array:\n");
   for (i = 0; i < n; i++) {
      scanf("%d", &arr[i]);
   }
   divide(arr, 0, n - 1);
   return 0;
}
void divide(int arr[], int low, int high) {
   static int count = 0;
   int mid
   if (low < high) {
      mid = (low + high) / 2;
      divide(arr, low, mid);
      divide(arr, mid + 1, high);
   }
   count++;
   if (low == high) {
      printf("The number of iterations to reach base condition is: %d\n", count);
   }
}

//2.Consider that you are going to analyze the characters in the given string. Write
//a C program to extract the characters in the given string and print whether the
//character is an uppercase alphabet, lowercase alphabet, digits, whitespace,
//special symbols. Print the count of each category by storing their counts in an
//array. Use appropriate looping constructs to implement this.
#include <stdio.h>
#include <ctype.h>

int main() {
    char str[100];
    int count[5] = {0}; // initialize count array to 0

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin); // read string from user input

    for (int i = 0; str[i] != '\0'; i++) {
        if (isupper(str[i])) {
            count[0]++;
            printf("%c is an uppercase alphabet\n", str[i]);
        }
        else if (islower(str[i])) {
            count[1]++;
            printf("%c is a lowercase alphabet\n", str[i]);
        }
        else if (isdigit(str[i])) {
            count[2]++;
            printf("%c is a digit\n", str[i]);
        }
        else if (isspace(str[i])) {
            count[3]++;
            printf("%c is a whitespace character\n", str[i]);
        }
        else {
            count[4]++;
            printf("%c is a special symbol\n", str[i]);
        }
    }

    printf("Count of uppercase alphabets: %d\n", count[0]);
    printf("Count of lowercase alphabets: %d\n", count[1]);
    printf("Count of digits: %d\n", count[2]);
    printf("Count of whitespace characters: %d\n", count[3]);
    printf("Count of special symbols: %d\n", count[4]);

    return 0;
}

//3.Write a c program to find the sum of the series 1!/1+2!/2+3!/3+4!/4+5!/5 ... n!/n 
//by utilizing user defined recursive function? Get the value of n from the
//user. Do not use any storage classes. Without returning the calculated result
//from the function, display the result in main
#include <stdio.h>

double factorial(int n); // function prototype for recursive factorial function

int main() {
    int n;
    double sum = 0.0;

    printf("Enter a positive integer: ");
    scanf("%d", &n);

    for (int i = 1; i <= n; i++) {
        sum += factorial(i) / i;
    }

    printf("Sum of the series is: %lf", sum);

    return 0;
}

// recursive function to calculate factorial
double factorial(int n) {
    if (n == 0 || n == 1) {
        return 1.0;
    }
    else {
        return n * factorial(n - 1);
    }
}

//4. ABC car showroom sells various types of cars such as Hatchback, Sedan,
//SUVs, and MUV. Due to the year-end sale, the showroom provides a 3%, 5%,
//10%, and 15% discount for various car models Hatchback, Sedan, SUV, and
//MUV respectively. Also applies 12% of GST for the total amount of purchase
//Write a C program to implement the above scenario which will read the
//type_of_the_car, price_of_the_car and extra-fitting_price_of_the_car as input
//from the user and estimate the Net amount to be paid to the showroom. If the
//type of car is other than Hatchback, Sedan, SUV, and MUV then display
//“Invalid Type”. (Difficulty Level: Easy)
//The net amount to be paid to the showroom is estimated as follows:
//(For example-if the purchased car is Hatchback)
//Total = price_of_the_car + extra-fitting_price_of_the_car
//Discount = Total * 0.03 // 0.03 denotes 3% wastage
//gst = (Total - Discount) * 0.12 // 0.12 denotes12% GST
//net = Total – Discount + gst
#include <stdio.h>

int main() {
    char carType[20];
    float carPrice, extraFittingPrice, total, discount, gst, net;

    // Prompt the user for input
    printf("Enter car type (Hatchback, Sedan, SUV, MUV): ");
    scanf("%s", carType);
    printf("Enter car price: ");
    scanf("%f", &carPrice);
    printf("Enter extra fitting price: ");
    scanf("%f", &extraFittingPrice);

    // Calculate the total amount
    total = carPrice + extraFittingPrice;

    // Calculate the discount based on the car type
    if (strcmp(carType, "Hatchback") == 0) {
        discount = total * 0.03;
    }
    else if (strcmp(carType, "Sedan") == 0) {
        discount = total * 0.05;
    }
    else if (strcmp(carType, "SUV") == 0) {
        discount = total * 0.1;
    }
    else if (strcmp(carType, "MUV") == 0) {
        discount = total * 0.15;
    }
    else {
        printf("Invalid Type\n");
        return 0;
    }

    // Calculate the GST and net amount
    gst = (total - discount) * 0.12;
    net = total - discount + gst;

    // Display the net amount to be paid
    printf("Net amount to be paid: %.2f\n", net);

    return 0;
}

//Write a C Program that reads the input as a string from the user in main (). 
//The input should be a sentence with two words. Pass this string to a function.
//Inside the function do the following operations:  For the first word, keep only the first character of the word to be in upper
//case and the rest of the characters in lower case.For the second word, convert all the characters into upper case letter.
//Print the revised string consisting of the two words in the function itself
//Find the length of the entire string. Print its length in the function itself in
//the next line of the revised string. Use appropriate string function to print
//this result in the next line. Return the length of the string, if the length is 
//less than 20. Else return the size of the string. 
#include <stdio.h>
#include <string.h>
#include <ctype.h>

int process_string(char str[]);

int main() {
    char sentence[50];

    printf("Enter a sentence with two words: ");
    fgets(sentence, 50, stdin);

    int length = process_string(sentence);
    printf("Length of the string: %d\n", length);

    if (length < 20) {
        return length;
    } else {
        return sizeof(sentence);
    }
}

int process_string(char str[]) {
    char first_word[20], second_word[20];

    // extract the two words from the input sentence
    sscanf(str, "%s %s", first_word, second_word);

    // convert the first word to upper case
    first_word[0] = toupper(first_word[0]);
    for (int i = 1; i < strlen(first_word); i++) {
        first_word[i] = tolower(first_word[i]);
    }

    // convert the second word to upper case
    for (int i = 0; i < strlen(second_word); i++) {
        second_word[i] = toupper(second_word[i]);
    }

    // print the revised string consisting of the two words
    printf("%s %s\n", first_word, second_word);

    // return the length of the entire string
    return strlen(str);
}

